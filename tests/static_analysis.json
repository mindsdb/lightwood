{
  "summary": {
    "started": "2021-10-27 19:58:17.685627",
    "libraries": [],
    "strictness": "from profile",
    "profiles": ".prospector.yml, doc_warnings, strictness_medium, strictness_high, strictness_veryhigh, no_member_warnings",
    "tools": [
      "dodgy",
      "mccabe",
      "pep257",
      "pep8",
      "profile-validator",
      "pyflakes",
      "pylint"
    ],
    "message_count": 1068,
    "completed": "2021-10-27 19:58:47.974256",
    "time_taken": "30.29",
    "formatter": "json"
  },
  "messages": [
    {
      "source": "pylint",
      "code": "too-many-arguments",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "lookup_encoder",
        "line": 59,
        "character": 0
      },
      "message": "Too many arguments (6/5)"
    },
    {
      "source": "mccabe",
      "code": "MC0001",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": "lookup_encoder",
        "line": 59,
        "character": 0
      },
      "message": "lookup_encoder is too complex (16)"
    },
    {
      "source": "pylint",
      "code": "too-many-statements",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "generate_json_ai",
        "line": 166,
        "character": 0
      },
      "message": "Too many statements (63/60)"
    },
    {
      "source": "mccabe",
      "code": "MC0001",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": "generate_json_ai",
        "line": 166,
        "character": 0
      },
      "message": "generate_json_ai is too complex (23)"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 67,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 67,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 171,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 421,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 421,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 452,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 452,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'r')"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 494,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 685,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 1154,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 1154,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 't')"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 172,
        "character": 121
      },
      "message": "line too long (172 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": null,
        "function": null,
        "line": 176,
        "character": 121
      },
      "message": "line too long (126 > 120 characters)"
    },
    {
      "source": "pylint",
      "code": "f-string-without-interpolation",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "code_from_json_ai",
        "line": 890,
        "character": 19
      },
      "message": "Using an f-string that does not have any interpolated variables"
    },
    {
      "source": "pylint",
      "code": "f-string-without-interpolation",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "code_from_json_ai",
        "line": 975,
        "character": 18
      },
      "message": "Using an f-string that does not have any interpolated variables"
    },
    {
      "source": "pylint",
      "code": "f-string-without-interpolation",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "code_from_json_ai",
        "line": 1000,
        "character": 17
      },
      "message": "Using an f-string that does not have any interpolated variables"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.templating'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 68,
        "character": 0
      },
      "message": "Line too long (366/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 70,
        "character": 0
      },
      "message": "Line too long (254/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 76,
        "character": 0
      },
      "message": "Line too long (175/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 77,
        "character": 0
      },
      "message": "Line too long (134/120)"
    },
    {
      "source": "pylint",
      "code": "eval-used",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "lookup_encoder",
        "line": 158,
        "character": 7
      },
      "message": "Use of eval"
    },
    {
      "source": "pylint",
      "code": "eval-used",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "generate_json_ai",
        "line": 313,
        "character": 16
      },
      "message": "Use of eval"
    },
    {
      "source": "pylint",
      "code": "eval-used",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "generate_json_ai",
        "line": 386,
        "character": 19
      },
      "message": "Use of eval"
    },
    {
      "source": "pylint",
      "code": "eval-used",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "_merge_implicit_values",
        "line": 431,
        "character": 13
      },
      "message": "Use of eval"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 453,
        "character": 0
      },
      "message": "Line too long (264/120)"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "_populate_implicit_field",
        "line": 475,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "_add_implicit_values",
        "line": 507,
        "character": 4
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "too-many-statements",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "code_from_json_ai",
        "line": 684,
        "character": 0
      },
      "message": "Too many statements (61/60)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "code_from_json_ai",
        "line": 1142,
        "character": 8
      },
      "message": "Import outside toplevel (black)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": null,
        "line": 1159,
        "character": 0
      },
      "message": "Line too long (126/120)"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "validate_json_ai",
        "line": 1161,
        "character": 4
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "lightwood/api/json_ai.py",
        "module": "json_ai",
        "function": "validate_json_ai",
        "line": 1161,
        "character": 4
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_code, lightwood.api.high_level.code_from_json_ai)"
    },
    {
      "source": "pylint",
      "code": "too-many-statements",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "get_column_data_type",
        "line": 162,
        "character": 0
      },
      "message": "Too many statements (74/60)"
    },
    {
      "source": "mccabe",
      "code": "MC0001",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": "get_column_data_type",
        "line": 162,
        "character": 0
      },
      "message": "get_column_data_type is too complex (22)"
    },
    {
      "source": "pep257",
      "code": "D210",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": null,
        "line": 80,
        "character": 0
      },
      "message": "No whitespaces allowed surrounding docstring text"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": null,
        "line": 80,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'r')"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": null,
        "line": 163,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": null,
        "line": 293,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": null,
        "line": 293,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": null,
        "function": null,
        "line": 293,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'n')"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 13,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.parallelism'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 16,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": null,
        "line": 19,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.seed'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "get_quantity_col_info",
        "line": 25,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "get_binary_type",
        "line": 60,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "type_check_sequence",
        "line": 103,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "type_check_date",
        "line": 124,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "count_data_types_in_column",
        "line": 139,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "get_column_data_type",
        "line": 185,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use dict(dtype_counts.items()) instead."
    },
    {
      "source": "pylint",
      "code": "consider-using-set-comprehension",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "get_column_data_type",
        "line": 206,
        "character": 27
      },
      "message": "Consider using a set comprehension"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "sample_data",
        "line": 346,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "infer_types",
        "line": 358,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "consider-using-with",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "infer_types",
        "line": 371,
        "character": 15
      },
      "message": "Consider using 'with' for resource-allocating operations"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "infer_types",
        "line": 384,
        "character": 38
      },
      "message": "Unused variable 'additional_info'"
    },
    {
      "source": "pylint",
      "code": "consider-using-with",
      "location": {
        "path": "lightwood/data/infer_types.py",
        "module": "infer_types",
        "function": "infer_types",
        "line": 400,
        "character": 15
      },
      "message": "Consider using 'with' for resource-allocating operations"
    },
    {
      "source": "mccabe",
      "code": "MC0001",
      "location": {
        "path": "lightwood/analysis/nc/calibrate.py",
        "module": null,
        "function": "ICP.analyze",
        "line": 35,
        "character": 0
      },
      "message": "ICP.analyze is too complex (22)"
    },
    {
      "source": "mccabe",
      "code": "MC0001",
      "location": {
        "path": "lightwood/analysis/nc/calibrate.py",
        "module": null,
        "function": "ICP.explain",
        "line": 200,
        "character": 0
      },
      "message": "ICP.explain is too complex (28)"
    },
    {
      "source": "pep257",
      "code": "D203",
      "location": {
        "path": "lightwood/analysis/nc/calibrate.py",
        "module": null,
        "function": null,
        "line": 23,
        "character": 0
      },
      "message": "1 blank line required before class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D210",
      "location": {
        "path": "lightwood/analysis/nc/calibrate.py",
        "module": null,
        "function": null,
        "line": 23,
        "character": 0
      },
      "message": "No whitespaces allowed surrounding docstring text"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/analysis/nc/calibrate.py",
        "module": null,
        "function": null,
        "line": 23,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'y')"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/analysis/nc/calibrate.py",
        "module": null,
        "function": null,
        "line": 25,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": null,
        "function": null,
        "line": 50,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pylint",
      "code": "too-many-arguments",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.__init__",
        "line": 50,
        "character": 4
      },
      "message": "Too many arguments (7/5)"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'optuna'"
    },
    {
      "source": "pylint",
      "code": "import-self",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Module import itself"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'optuna.integration.lightgbm'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 13,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer.base'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.device'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 16,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": null,
        "line": 17,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data.encoded_ds'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "check_gpu_support",
        "line": 23,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "simplifiable-if-statement",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "check_gpu_support",
        "line": 31,
        "character": 8
      },
      "message": "The if statement can be replaced with 'return bool(test)'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM",
        "line": 39,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.fit",
        "line": 112,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "no-else-raise",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.fit",
        "line": 125,
        "character": 8
      },
      "message": "Unnecessary \"else\" after \"raise\""
    },
    {
      "source": "pylint",
      "code": "consider-using-max-builtin",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.fit",
        "line": 179,
        "character": 8
      },
      "message": "Consider using 'num_iterations = max(num_iterations, 1)' instead of unnecessary if block"
    },
    {
      "source": "pylint",
      "code": "arguments-out-of-order",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.fit",
        "line": 193,
        "character": 12
      },
      "message": "Positional arguments appear to be out of order"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.partial_fit",
        "line": 195,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "consider-using-max-builtin",
      "location": {
        "path": "lightwood/mixer/lightgbm.py",
        "module": "lightgbm",
        "function": "LightGBM.partial_fit",
        "line": 209,
        "character": 8
      },
      "message": "Consider using 'iterations = max(iterations, 1)' instead of unnecessary if block"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": null,
        "function": null,
        "line": 20,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pylint",
      "code": "too-many-arguments",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": "SkTime.__init__",
        "line": 20,
        "character": 4
      },
      "message": "Too many arguments (6/5)"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": null,
        "function": null,
        "line": 72,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": null,
        "function": null,
        "line": 72,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": null,
        "function": null,
        "line": 72,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not ',')"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'sktime.forecasting.arima'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer.base'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series.helpers.common'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data.encoded_ds'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": "SkTime",
        "line": 14,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": "SkTime.fit",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "arguments-out-of-order",
      "location": {
        "path": "lightwood/mixer/sktime.py",
        "module": "sktime",
        "function": "SkTime.partial_fit",
        "line": 84,
        "character": 8
      },
      "message": "Positional arguments appear to be out of order"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/encoder/image/img_2_vec.py",
        "module": null,
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/encoder/image/img_2_vec.py",
        "module": null,
        "function": null,
        "line": 47,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/encoder/image/img_2_vec.py",
        "module": null,
        "function": null,
        "line": 47,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 's')"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/encoder/image/helpers/img_to_vec.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D210",
      "location": {
        "path": "lightwood/encoder/image/helpers/img_to_vec.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "No whitespaces allowed surrounding docstring text"
    },
    {
      "source": "pep257",
      "code": "D213",
      "location": {
        "path": "lightwood/encoder/image/helpers/img_to_vec.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the second line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/encoder/image/helpers/img_to_vec.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'c')"
    },
    {
      "source": "pep257",
      "code": "D200",
      "location": {
        "path": "lightwood/encoder/audio/mfcc.py",
        "module": null,
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "One-line docstring should fit on one line with quotes (found 3)"
    },
    {
      "source": "pep257",
      "code": "D203",
      "location": {
        "path": "lightwood/encoder/audio/mfcc.py",
        "module": null,
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "1 blank line required before class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D204",
      "location": {
        "path": "lightwood/encoder/audio/mfcc.py",
        "module": null,
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "1 blank line required after class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/encoder/audio/mfcc.py",
        "module": null,
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/encoder/audio/mfcc.py",
        "module": null,
        "function": null,
        "line": 16,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.base'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.datetime.datetime'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.datetime.datetime_sin_normalizer'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.image.img_2_vec'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric.ts_numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric.ts_array_numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.short'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.vocab'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.rnn'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.onehot'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 13,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.binary'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.autoencoder'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series.rnn'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 16,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.array.array'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 17,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.multihot'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.pretrained'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 19,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.type_encoder_maps'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/encoder/__init__.py",
        "module": "encoder",
        "function": null,
        "line": 22,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.audio'"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 32,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 32,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 32,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not '`')"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 63,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 63,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 63,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 86,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D200",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 137,
        "character": 0
      },
      "message": "One-line docstring should fit on one line with quotes (found 3)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 137,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 157,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 172,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D200",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 204,
        "character": 0
      },
      "message": "One-line docstring should fit on one line with quotes (found 3)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 204,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D200",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 217,
        "character": 0
      },
      "message": "One-line docstring should fit on one line with quotes (found 3)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 217,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D200",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 227,
        "character": 0
      },
      "message": "One-line docstring should fit on one line with quotes (found 3)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 227,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 245,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 274,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 274,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 't')"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 312,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 312,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 312,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": null,
        "function": null,
        "line": 312,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'a')"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.numeric'"
    },
    {
      "source": "pylint",
      "code": "dangerous-default-value",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": "cleaner",
        "line": 21,
        "character": 0
      },
      "message": "Dangerous default value {} as argument"
    },
    {
      "source": "pylint",
      "code": "too-many-arguments",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": "cleaner",
        "line": 21,
        "character": 0
      },
      "message": "Too many arguments (9/5)"
    },
    {
      "source": "pylint",
      "code": "unused-argument",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": "cleaner",
        "line": 24,
        "character": 4
      },
      "message": "Unused argument 'pct_invalid'"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 33,
        "character": 0
      },
      "message": "Line too long (324/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 41,
        "character": 0
      },
      "message": "Line too long (137/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 64,
        "character": 0
      },
      "message": "Line too long (155/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 65,
        "character": 0
      },
      "message": "Line too long (159/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 87,
        "character": 0
      },
      "message": "Line too long (164/120)"
    },
    {
      "source": "pylint",
      "code": "eval-used",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": "get_cleaning_func",
        "line": 94,
        "character": 21
      },
      "message": "Use of eval"
    },
    {
      "source": "pylint",
      "code": "consider-using-generator",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": "_tags_to_tuples",
        "line": 166,
        "character": 15
      },
      "message": "Consider using a generator instead 'tuple(x.strip() for x in tags_str.split(','))'"
    },
    {
      "source": "pylint",
      "code": "too-many-arguments",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": "_remove_columns",
        "line": 271,
        "character": 0
      },
      "message": "Too many arguments (7/5)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "lightwood/data/cleaner.py",
        "module": "cleaner",
        "function": null,
        "line": 282,
        "character": 0
      },
      "message": "Line too long (137/120)"
    },
    {
      "source": "pep257",
      "code": "D203",
      "location": {
        "path": "lightwood/analysis/helpers/feature_importance.py",
        "module": null,
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "1 blank line required before class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D204",
      "location": {
        "path": "lightwood/analysis/helpers/feature_importance.py",
        "module": null,
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "1 blank line required after class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/analysis/helpers/feature_importance.py",
        "module": null,
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/analysis/helpers/feature_importance.py",
        "module": null,
        "function": null,
        "line": 29,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep257",
      "code": "D203",
      "location": {
        "path": "lightwood/analysis/helpers/shap.py",
        "module": null,
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "1 blank line required before class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D204",
      "location": {
        "path": "lightwood/analysis/helpers/shap.py",
        "module": null,
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "1 blank line required after class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "lightwood/analysis/helpers/shap.py",
        "module": null,
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "lightwood/analysis/helpers/shap.py",
        "module": null,
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "lightwood/analysis/helpers/shap.py",
        "module": null,
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'h')"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "lightwood/analysis/helpers/shap.py",
        "module": null,
        "function": null,
        "line": 29,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis.analyze'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis.explain'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis.base'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis.nc.calibrate'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis.helpers.acc_stats'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis.helpers.feature_importance'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "lightwood/analysis/__init__.py",
        "module": "analysis",
        "function": null,
        "line": 12,
        "character": 4
      },
      "message": "Unable to import 'lightwood.analysis.helpers.shap'"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/text/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D200",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": null,
        "function": null,
        "line": 36,
        "character": 0
      },
      "message": "One-line docstring should fit on one line with quotes (found 3)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": null,
        "function": null,
        "line": 36,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.datetime.datetime'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.datetime.datetime'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.datetime.datetime_sin_normalizer'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.datetime.datetime_sin_normalizer'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder.test_decode",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder.test_decode",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder.test_sinusoidal_encoding",
        "line": 19,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder.test_sinusoidal_encoding",
        "line": 19,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "no-else-continue",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder.test_cap_invalid_dates",
        "line": 53,
        "character": 16
      },
      "message": "Unnecessary \"else\" after \"continue\""
    },
    {
      "source": "pylint",
      "code": "no-else-continue",
      "location": {
        "path": "tests/unit_tests/encoder/date/test_datetime.py",
        "module": "tests.unit_tests.encoder.date.test_datetime",
        "function": "TestDatetimeEncoder.test_cap_invalid_dates",
        "line": 53,
        "character": 16
      },
      "message": "Unnecessary \"else\" after \"continue\""
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/date/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/audio/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/identity/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/images/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/encoder/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/unit_tests/data/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/utils/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": null,
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D213",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": null,
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the second line"
    },
    {
      "source": "pep257",
      "code": "D404",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": null,
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "First word of the docstring should not be `This`"
    },
    {
      "source": "pep257",
      "code": "D208",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": null,
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Docstring is over-indented"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic.test_0_unkown_cateogires_in_test",
        "line": 19,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic.test_0_unkown_cateogires_in_test",
        "line": 19,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic.test_0_unkown_cateogires_in_test",
        "line": 19,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic.test_0_unkown_cateogires_in_test",
        "line": 19,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic.test_0_unkown_cateogires_in_test",
        "line": 25,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use list(range(600)) instead."
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "tests/integration/basic/test_weird_target_dist.py",
        "module": "tests.integration.basic.test_weird_target_dist",
        "function": "TestBasic.test_0_unkown_cateogires_in_test",
        "line": 25,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use list(range(600)) instead."
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/integration/basic/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D210",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": null,
        "function": null,
        "line": 49,
        "character": 0
      },
      "message": "No whitespaces allowed surrounding docstring text"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": null,
        "function": null,
        "line": 49,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not '1')"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": null,
        "function": null,
        "line": 149,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": null,
        "function": null,
        "line": 149,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": null,
        "function": null,
        "line": 149,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": null,
        "function": null,
        "line": 149,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'e')"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries",
        "line": 12,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries",
        "line": 12,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.check_ts_prediction_df",
        "line": 13,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.check_ts_prediction_df",
        "line": 13,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.check_ts_prediction_df",
        "line": 14,
        "character": 12
      },
      "message": "Unused variable 'idx'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.split_arrivals",
        "line": 30,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.split_arrivals",
        "line": 30,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_0_time_series_grouped_regression",
        "line": 83,
        "character": 12
      },
      "message": "Unused variable 'idx'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_0_time_series_grouped_regression",
        "line": 90,
        "character": 15
      },
      "message": "Use a generator instead 'all(all([v == 0.01 for v in f]) for f in preds['confidence'].values)'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_0_time_series_grouped_regression",
        "line": 90,
        "character": 15
      },
      "message": "Use a generator instead 'all(all([v == 0.01 for v in f]) for f in preds['confidence'].values)'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_0_time_series_grouped_regression",
        "line": 90,
        "character": 20
      },
      "message": "Use a generator instead 'all(v == 0.01 for v in f)'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_0_time_series_grouped_regression",
        "line": 90,
        "character": 20
      },
      "message": "Use a generator instead 'all(v == 0.01 for v in f)'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_1_time_series_regression",
        "line": 94,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_1_time_series_regression",
        "line": 94,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_1_time_series_regression",
        "line": 96,
        "character": 8
      },
      "message": "Unused variable 'train'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 123,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 123,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 124,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 124,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 124,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 124,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "reimported",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 124,
        "character": 8
      },
      "message": "Reimport 'predictor_from_problem' (imported line 7)"
    },
    {
      "source": "pylint",
      "code": "reimported",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_2_time_series_classification",
        "line": 124,
        "character": 8
      },
      "message": "Reimport 'predictor_from_problem' (imported line 7)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 156,
        "character": 8
      },
      "message": "Import outside toplevel (sklearn.metrics.r2_score)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 156,
        "character": 8
      },
      "message": "Import outside toplevel (sklearn.metrics.r2_score)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 157,
        "character": 8
      },
      "message": "Import outside toplevel (scipy.signal)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 157,
        "character": 8
      },
      "message": "Import outside toplevel (scipy.signal)"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 158,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 158,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 158,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.ProblemDefinition, lightwood.api.high_level.json_ai_from_problem, lightwood.api.high_level.code_from_json_ai, lightwood.api.high_level.predictor_from_code)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 158,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.ProblemDefinition, lightwood.api.high_level.json_ai_from_problem, lightwood.api.high_level.code_from_json_ai, lightwood.api.high_level.predictor_from_code)"
    },
    {
      "source": "pylint",
      "code": "reimported",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 158,
        "character": 8
      },
      "message": "Reimport 'ProblemDefinition' (imported line 6)"
    },
    {
      "source": "pylint",
      "code": "reimported",
      "location": {
        "path": "tests/integration/advanced/test_timeseries.py",
        "module": "tests.integration.advanced.test_timeseries",
        "function": "TestTimeseries.test_3_time_series_sktime_mixer",
        "line": 158,
        "character": 8
      },
      "message": "Reimport 'ProblemDefinition' (imported line 6)"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/integration/advanced/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/integration/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "tests/__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": null,
        "function": null,
        "line": 46,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": null,
        "function": null,
        "line": 46,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": null,
        "function": null,
        "line": 46,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not '`')"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unused import re"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unused deepcopy imported from copy"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unused import datetime"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unused parse imported from dateutil.parser as parse_dt"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers'"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unused text imported from lightwood.helpers"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.numeric'"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unused can_be_nan_numeric imported from lightwood.helpers.numeric"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "Unable to import 'nltk'"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 18,
        "character": 0
      },
      "message": "Unused import nltk"
    },
    {
      "source": "pylint",
      "code": "wrong-import-position",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 23,
        "character": 0
      },
      "message": "Import \"from typing import Dict, List, Optional, Tuple, Callable, Union\" should be placed at the top of the module"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 23,
        "character": 0
      },
      "message": "Unused List imported from typing"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 13,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 19,
        "character": 0
      },
      "message": "Unable to import 'nltk.corpus'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 26,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data.cleaner'"
    },
    {
      "source": "pylint",
      "code": "wrong-import-position",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 26,
        "character": 0
      },
      "message": "Import \"from lightwood.data.cleaner import _remove_columns, _get_columns_to_clean, get_cleaning_func\" should be placed at the top of the module"
    },
    {
      "source": "pylint",
      "code": "dangerous-default-value",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": "cleaner",
        "line": 36,
        "character": 0
      },
      "message": "Dangerous default value {} as argument"
    },
    {
      "source": "pylint",
      "code": "too-many-arguments",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": "cleaner",
        "line": 36,
        "character": 0
      },
      "message": "Too many arguments (8/5)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 47,
        "character": 0
      },
      "message": "Line too long (324/120)"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/MyCustomCleaner.py",
        "module": "MyCustomCleaner",
        "function": null,
        "line": 54,
        "character": 0
      },
      "message": "Line too long (137/120)"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 48,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 370,
        "character": 121
      },
      "message": "line too long (128 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 371,
        "character": 121
      },
      "message": "line too long (126 > 120 characters)"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 41,
        "character": 17
      },
      "message": "'PredictorInterface' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor",
        "line": 41,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor",
        "line": 41,
        "character": 16
      },
      "message": "Undefined variable 'PredictorInterface'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 43,
        "character": 18
      },
      "message": "'BaseMixer' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor",
        "line": 43,
        "character": 17
      },
      "message": "Undefined variable 'BaseMixer'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 44,
        "character": 25
      },
      "message": "'BaseEncoder' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor",
        "line": 44,
        "character": 24
      },
      "message": "Undefined variable 'BaseEncoder'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 45,
        "character": 15
      },
      "message": "'BaseEnsemble' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor",
        "line": 45,
        "character": 14
      },
      "message": "Undefined variable 'BaseEnsemble'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 49,
        "character": 9
      },
      "message": "'seed' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.__init__",
        "line": 49,
        "character": 8
      },
      "message": "Undefined variable 'seed'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 52,
        "character": 35
      },
      "message": "'ProblemDefinition' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.__init__",
        "line": 52,
        "character": 34
      },
      "message": "Undefined variable 'ProblemDefinition'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 95,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_data",
        "line": 95,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 105,
        "character": 13
      },
      "message": "'ICP' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_data",
        "line": 105,
        "character": 12
      },
      "message": "Undefined variable 'ICP'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 110,
        "character": 13
      },
      "message": "'AccStats' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_data",
        "line": 110,
        "character": 12
      },
      "message": "Undefined variable 'AccStats'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 111,
        "character": 13
      },
      "message": "'GlobalFeatureImportance' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_data",
        "line": 111,
        "character": 12
      },
      "message": "Undefined variable 'GlobalFeatureImportance'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 117,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.preprocess",
        "line": 117,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 118,
        "character": 16
      },
      "message": "'MyCustomCleaner' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.preprocess",
        "line": 118,
        "character": 15
      },
      "message": "Undefined variable 'MyCustomCleaner'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 135,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.split",
        "line": 135,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 136,
        "character": 27
      },
      "message": "'splitter' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.split",
        "line": 136,
        "character": 26
      },
      "message": "Undefined variable 'splitter'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 159,
        "character": 23
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.prepare",
        "line": 159,
        "character": 22
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 163,
        "character": 24
      },
      "message": "'Rich_Text' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.prepare",
        "line": 163,
        "character": 23
      },
      "message": "Undefined variable 'Rich_Text'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 172,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.prepare",
        "line": 172,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 184,
        "character": 17
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.prepare",
        "line": 184,
        "character": 16
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 189,
        "character": 37
      },
      "message": "'mut_method_call' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.prepare",
        "line": 189,
        "character": 36
      },
      "message": "Undefined variable 'mut_method_call'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 230,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.featurize",
        "line": 230,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 234,
        "character": 33
      },
      "message": "'EncodedDs' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.featurize",
        "line": 234,
        "character": 32
      },
      "message": "Undefined variable 'EncodedDs'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 251,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 251,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 258,
        "character": 13
      },
      "message": "'Neural' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 258,
        "character": 12
      },
      "message": "Undefined variable 'Neural'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 269,
        "character": 13
      },
      "message": "'LightGBM' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 269,
        "character": 12
      },
      "message": "Undefined variable 'LightGBM'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 276,
        "character": 13
      },
      "message": "'Regression' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 276,
        "character": 12
      },
      "message": "Undefined variable 'Regression'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 291,
        "character": 17
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 291,
        "character": 16
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 301,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 301,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 303,
        "character": 26
      },
      "message": "'PredictionArguments' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 303,
        "character": 25
      },
      "message": "Undefined variable 'PredictionArguments'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 304,
        "character": 25
      },
      "message": "'BestOf' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 304,
        "character": 24
      },
      "message": "Undefined variable 'BestOf'"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 321,
        "character": 8
      },
      "message": "Unused variable 'encoded_dev_data'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 327,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 327,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 328,
        "character": 54
      },
      "message": "'model_analyzer' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 328,
        "character": 53
      },
      "message": "Undefined variable 'model_analyzer'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 341,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.learn",
        "line": 341,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 377,
        "character": 13
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.learn",
        "line": 377,
        "character": 12
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 380,
        "character": 24
      },
      "message": "'ConcatedEncodedDs' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.learn",
        "line": 380,
        "character": 23
      },
      "message": "Undefined variable 'ConcatedEncodedDs'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 402,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.adjust",
        "line": 402,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 410,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 410,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 420,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 420,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 421,
        "character": 16
      },
      "message": "'MyCustomCleaner' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 421,
        "character": 15
      },
      "message": "Undefined variable 'MyCustomCleaner'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 432,
        "character": 22
      },
      "message": "'EncodedDs' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 432,
        "character": 21
      },
      "message": "Undefined variable 'EncodedDs'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 435,
        "character": 26
      },
      "message": "'PredictionArguments' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 435,
        "character": 25
      },
      "message": "Undefined variable 'PredictionArguments'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": null,
        "function": null,
        "line": 441,
        "character": 41
      },
      "message": "'explain' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 441,
        "character": 40
      },
      "message": "Undefined variable 'explain'"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 441,
        "character": 22
      },
      "message": "Unused variable 'global_insights'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.ensemble'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.device'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.general'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.parallelism'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.seed'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 13,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.torch'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_data",
        "line": 92,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.preprocess",
        "line": 114,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.split",
        "line": 132,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.prepare",
        "line": 149,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.featurize",
        "line": 227,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 238,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "simplifiable-condition",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.fit",
        "line": 292,
        "character": 19
      },
      "message": "Boolean condition 'True and mixer.stable' may be simplified to 'mixer.stable'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 313,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.learn",
        "line": 340,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.adjust",
        "line": 387,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "dangerous-default-value",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 407,
        "character": 4
      },
      "message": "Dangerous default value {} as argument"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_cleaner/custom_cleaner_pipeline.py",
        "module": "custom_cleaner_pipeline",
        "function": "Predictor.predict",
        "line": 407,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": null,
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pylint",
      "code": "useless-super-delegation",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": "model_correlation",
        "function": "ModelCorrelationHeatmap.__init__",
        "line": 11,
        "character": 4
      },
      "message": "Useless super delegation in method '__init__'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": "model_correlation",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": "model_correlation",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.ensemble'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": "model_correlation",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": "model_correlation",
        "function": "ModelCorrelationHeatmap",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_explainer/model_correlation.py",
        "module": "model_correlation",
        "function": "ModelCorrelationHeatmap.analyze",
        "line": 14,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not '3')"
    },
    {
      "source": "pep257",
      "code": "D203",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "1 blank line required before class docstring (found 0)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 31,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 31,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'r')"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 45,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 45,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 68,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 68,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 's')"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 81,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": null,
        "function": null,
        "line": 81,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'a')"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": "LabelEncoder",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": "LabelEncoder",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "line-too-long",
      "location": {
        "path": "docssrc/source/tutorials/custom_encoder_rulebased/LabelEncoder.py",
        "module": "LabelEncoder",
        "function": null,
        "line": 16,
        "character": 0
      },
      "message": "Line too long (121/120)"
    },
    {
      "source": "pep257",
      "code": "D202",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "No blank lines allowed after function docstring (found 1)"
    },
    {
      "source": "pep257",
      "code": "D205",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "1 blank line required between summary line and description (found 2)"
    },
    {
      "source": "pep257",
      "code": "D212",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "Multi-line docstring summary should start at the first line"
    },
    {
      "source": "pep257",
      "code": "D415",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": null,
        "function": null,
        "line": 21,
        "character": 0
      },
      "message": "First line should end with a period, question mark, or exclamation point (not 'n')"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unused dtype imported from lightwood.api.dtype"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unused numpy imported as np"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unused List imported from typing"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unused product imported from itertools"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unused TimeseriesSettings imported from lightwood.api.types"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "unused-import",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unused log imported from lightwood.helpers.log"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/MyCustomSplitter.py",
        "module": "MyCustomSplitter",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'imblearn.over_sampling'"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 48,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 481,
        "character": 121
      },
      "message": "line too long (128 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 482,
        "character": 121
      },
      "message": "line too long (126 > 120 characters)"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 41,
        "character": 17
      },
      "message": "'PredictorInterface' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor",
        "line": 41,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor",
        "line": 41,
        "character": 16
      },
      "message": "Undefined variable 'PredictorInterface'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 43,
        "character": 18
      },
      "message": "'BaseMixer' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor",
        "line": 43,
        "character": 17
      },
      "message": "Undefined variable 'BaseMixer'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 44,
        "character": 25
      },
      "message": "'BaseEncoder' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor",
        "line": 44,
        "character": 24
      },
      "message": "Undefined variable 'BaseEncoder'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 45,
        "character": 15
      },
      "message": "'BaseEnsemble' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor",
        "line": 45,
        "character": 14
      },
      "message": "Undefined variable 'BaseEnsemble'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 49,
        "character": 9
      },
      "message": "'seed' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.__init__",
        "line": 49,
        "character": 8
      },
      "message": "Undefined variable 'seed'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 52,
        "character": 35
      },
      "message": "'ProblemDefinition' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.__init__",
        "line": 52,
        "character": 34
      },
      "message": "Undefined variable 'ProblemDefinition'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 189,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_data",
        "line": 189,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 196,
        "character": 13
      },
      "message": "'ICP' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_data",
        "line": 196,
        "character": 12
      },
      "message": "Undefined variable 'ICP'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 201,
        "character": 13
      },
      "message": "'AccStats' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_data",
        "line": 201,
        "character": 12
      },
      "message": "Undefined variable 'AccStats'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 202,
        "character": 13
      },
      "message": "'GlobalFeatureImportance' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_data",
        "line": 202,
        "character": 12
      },
      "message": "Undefined variable 'GlobalFeatureImportance'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 208,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.preprocess",
        "line": 208,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 209,
        "character": 16
      },
      "message": "'cleaner' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.preprocess",
        "line": 209,
        "character": 15
      },
      "message": "Undefined variable 'cleaner'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 227,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.split",
        "line": 227,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 228,
        "character": 27
      },
      "message": "'MyCustomSplitter' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.split",
        "line": 228,
        "character": 26
      },
      "message": "Undefined variable 'MyCustomSplitter'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 244,
        "character": 22
      },
      "message": "'Binary' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 244,
        "character": 21
      },
      "message": "Undefined variable 'Binary'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 248,
        "character": 21
      },
      "message": "'Integer' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 248,
        "character": 20
      },
      "message": "Undefined variable 'Integer'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 249,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 249,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 250,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 250,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 251,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 251,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 252,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 252,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 253,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 253,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 254,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 254,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 255,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 255,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 256,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 256,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 257,
        "character": 19
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 257,
        "character": 18
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 258,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 258,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 259,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 259,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 260,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 260,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 261,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 261,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 262,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 262,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 263,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 263,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 264,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 264,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 265,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 265,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 266,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 266,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 267,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 267,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 268,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 268,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 269,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 269,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 270,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 270,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 271,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 271,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 272,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 272,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 273,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 273,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 274,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 274,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 275,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 275,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 276,
        "character": 20
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 276,
        "character": 19
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 277,
        "character": 23
      },
      "message": "'Float' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 277,
        "character": 22
      },
      "message": "Undefined variable 'Float'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 283,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 283,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 295,
        "character": 17
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 295,
        "character": 16
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 300,
        "character": 37
      },
      "message": "'mut_method_call' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 300,
        "character": 36
      },
      "message": "Undefined variable 'mut_method_call'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 341,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.featurize",
        "line": 341,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 345,
        "character": 33
      },
      "message": "'EncodedDs' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.featurize",
        "line": 345,
        "character": 32
      },
      "message": "Undefined variable 'EncodedDs'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 362,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 362,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 369,
        "character": 13
      },
      "message": "'Neural' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 369,
        "character": 12
      },
      "message": "Undefined variable 'Neural'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 380,
        "character": 13
      },
      "message": "'LightGBM' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 380,
        "character": 12
      },
      "message": "Undefined variable 'LightGBM'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 387,
        "character": 13
      },
      "message": "'Regression' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 387,
        "character": 12
      },
      "message": "Undefined variable 'Regression'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 402,
        "character": 17
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 402,
        "character": 16
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 412,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 412,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 414,
        "character": 26
      },
      "message": "'PredictionArguments' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 414,
        "character": 25
      },
      "message": "Undefined variable 'PredictionArguments'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 415,
        "character": 25
      },
      "message": "'BestOf' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 415,
        "character": 24
      },
      "message": "Undefined variable 'BestOf'"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 432,
        "character": 8
      },
      "message": "Unused variable 'encoded_dev_data'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 438,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 438,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 439,
        "character": 54
      },
      "message": "'model_analyzer' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 439,
        "character": 53
      },
      "message": "Undefined variable 'model_analyzer'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 452,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.learn",
        "line": 452,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 488,
        "character": 13
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.learn",
        "line": 488,
        "character": 12
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 491,
        "character": 24
      },
      "message": "'ConcatedEncodedDs' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.learn",
        "line": 491,
        "character": 23
      },
      "message": "Undefined variable 'ConcatedEncodedDs'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 513,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.adjust",
        "line": 513,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 521,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 521,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 531,
        "character": 9
      },
      "message": "'log' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 531,
        "character": 8
      },
      "message": "Undefined variable 'log'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 532,
        "character": 16
      },
      "message": "'cleaner' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 532,
        "character": 15
      },
      "message": "Undefined variable 'cleaner'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 544,
        "character": 22
      },
      "message": "'EncodedDs' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 544,
        "character": 21
      },
      "message": "Undefined variable 'EncodedDs'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 547,
        "character": 26
      },
      "message": "'PredictionArguments' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 547,
        "character": 25
      },
      "message": "Undefined variable 'PredictionArguments'"
    },
    {
      "source": "pyflakes",
      "code": "F405",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": null,
        "function": null,
        "line": 553,
        "character": 41
      },
      "message": "'explain' may be undefined, or defined from star imports: lightwood.analysis, lightwood.api, lightwood.data, lightwood.encoder, lightwood.ensemble, lightwood.helpers.device, lightwood.helpers.general, lightwood.helpers.log, lightwood.helpers.numeric, lightwood.helpers.parallelism, lightwood.helpers.seed, lightwood.helpers.text, lightwood.helpers.torch, lightwood.mixer"
    },
    {
      "source": "pylint",
      "code": "undefined-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 553,
        "character": 40
      },
      "message": "Undefined variable 'explain'"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 553,
        "character": 22
      },
      "message": "Unused variable 'global_insights'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.analysis'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.ensemble'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.device'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.general'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 9,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 10,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 11,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.parallelism'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 12,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.seed'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 13,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.torch'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_data",
        "line": 186,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.preprocess",
        "line": 205,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.split",
        "line": 224,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.prepare",
        "line": 234,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.featurize",
        "line": 338,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 349,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "simplifiable-condition",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.fit",
        "line": 403,
        "character": 19
      },
      "message": "Boolean condition 'True and mixer.stable' may be simplified to 'mixer.stable'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.analyze_ensemble",
        "line": 424,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.learn",
        "line": 451,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.adjust",
        "line": 498,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "dangerous-default-value",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 518,
        "character": 4
      },
      "message": "Dangerous default value {} as argument"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_splitter/custom_splitter_pipeline.py",
        "module": "custom_splitter_pipeline",
        "function": "Predictor.predict",
        "line": 518,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pep257",
      "code": "D107",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": null,
        "function": null,
        "line": 15,
        "character": 0
      },
      "message": "Missing docstring in __init__"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": null,
        "function": null,
        "line": 18,
        "character": 121
      },
      "message": "line too long (156 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": null,
        "function": null,
        "line": 20,
        "character": 121
      },
      "message": "line too long (135 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": null,
        "function": null,
        "line": 22,
        "character": 121
      },
      "message": "line too long (135 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": null,
        "function": null,
        "line": 27,
        "character": 121
      },
      "message": "line too long (306 > 120 characters)"
    },
    {
      "source": "pep8",
      "code": "E501",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": null,
        "function": null,
        "line": 45,
        "character": 121
      },
      "message": "line too long (162 > 120 characters)"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data.encoded_ds'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": "RandomForestMixer",
        "line": 12,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "docssrc/source/tutorials/custom_mixer/random_forest_mixer.py",
        "module": "random_forest_mixer",
        "function": "RandomForestMixer.fit",
        "line": 25,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pep257",
      "code": "D104",
      "location": {
        "path": "__init__.py",
        "module": null,
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing docstring in public package"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "__init__.py",
        "module": "__init__",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "docssrc/source/conf.py",
        "module": "conf",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "docssrc/source/conf.py",
        "module": "conf",
        "function": null,
        "line": 14,
        "character": 0
      },
      "message": "Unable to import 'sphinx_rtd_theme'"
    },
    {
      "source": "pylint",
      "code": "redefined-builtin",
      "location": {
        "path": "docssrc/source/conf.py",
        "module": "conf",
        "function": null,
        "line": 25,
        "character": 0
      },
      "message": "Redefining built-in 'copyright'"
    },
    {
      "source": "pylint",
      "code": "consider-using-f-string",
      "location": {
        "path": "docssrc/source/conf.py",
        "module": "conf",
        "function": null,
        "line": 29,
        "character": 12
      },
      "message": "Formatting a regular string which could be a f-string"
    },
    {
      "source": "pylint",
      "code": "redundant-u-string-prefix",
      "location": {
        "path": "docssrc/source/conf.py",
        "module": "conf",
        "function": null,
        "line": 29,
        "character": 12
      },
      "message": "The u prefix for strings is no longer necessary in Python >=3.0"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'mindsdb_datasources'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'mindsdb_datasources'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "create_custom_module",
        "line": 13,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "create_custom_module",
        "line": 13,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unspecified-encoding",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "create_custom_module",
        "line": 24,
        "character": 9
      },
      "message": "Using open without explicitly specifying an encoding"
    },
    {
      "source": "pylint",
      "code": "unspecified-encoding",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "create_custom_module",
        "line": 24,
        "character": 9
      },
      "message": "Using open without explicitly specifying an encoding"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "TestBasic",
        "line": 28,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "TestBasic",
        "line": 28,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "TestBasic.test_0_add_throwing_cleaner",
        "line": 29,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "TestBasic.test_0_add_throwing_cleaner",
        "line": 29,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "TestBasic.test_1_add_analyzer_block",
        "line": 65,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_custom_modules.py",
        "module": "tests.integration.advanced.test_custom_modules",
        "function": "TestBasic.test_1_add_analyzer_block",
        "line": 65,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": "TestText",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": "TestText",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": "TestText.test_0_train_and_predict_bypass",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": "TestText.test_0_train_and_predict_bypass",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": "TestText.test_1_train_and_predict_model",
        "line": 18,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/advanced/test_text_input.py",
        "module": "tests.integration.advanced.test_text_input",
        "function": "TestText.test_1_train_and_predict_model",
        "line": 18,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic",
        "line": 8,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic",
        "line": 8,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 22,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_airline.py",
        "module": "tests.integration.basic.test_airline",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 22,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'mindsdb_datasources'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'mindsdb_datasources'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": "TestInferTypes",
        "line": 18,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": "TestInferTypes",
        "line": 18,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": "TestInferTypes.test_analyze_home_rentlas",
        "line": 19,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": "TestInferTypes.test_analyze_home_rentlas",
        "line": 19,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": "TestInferTypes.test_with_generated",
        "line": 50,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": "TestInferTypes.test_with_generated",
        "line": 50,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "pointless-string-statement",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 116,
        "character": 0
      },
      "message": "String statement has no effect"
    },
    {
      "source": "pylint",
      "code": "pointless-string-statement",
      "location": {
        "path": "tests/integration/basic/test_analyze_dataset.py",
        "module": "tests.integration.basic.test_analyze_dataset",
        "function": null,
        "line": 116,
        "character": 0
      },
      "message": "String statement has no effect"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "import-outside-toplevel",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 11,
        "character": 8
      },
      "message": "Import outside toplevel (lightwood.api.high_level.predictor_from_problem)"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 33,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 33,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 34,
        "character": 24
      },
      "message": "Use a generator instead 'all(p['lower'] <= p['prediction'] <= p['upper'] for (_, p) in predictions.iterrows())'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 34,
        "character": 24
      },
      "message": "Use a generator instead 'all(p['lower'] <= p['prediction'] <= p['upper'] for (_, p) in predictions.iterrows())'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 40,
        "character": 15
      },
      "message": "Use a generator instead 'all(v == fixed_conf for v in fixed_predictions['confidence'].values)'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_boston_housing.py",
        "module": "tests.integration.basic.test_boston_housing",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 40,
        "character": 15
      },
      "message": "Use a generator instead 'all(v == fixed_conf for v in fixed_predictions['confidence'].values)'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.setup_predictor",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.setup_predictor",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.setup_predictor",
        "line": 23,
        "character": 19
      },
      "message": "Unused variable 'mixer'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_0_binary",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_0_binary",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_0_binary",
        "line": 44,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_0_binary",
        "line": 44,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_1_categorical",
        "line": 46,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_1_categorical",
        "line": 46,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_1_categorical",
        "line": 53,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_categorical.py",
        "module": "tests.integration.basic.test_categorical",
        "function": "TestBasic.test_1_categorical",
        "line": 53,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": "TestBasic",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": "TestBasic",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": "TestBasic.test_0_mean_ensemble",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_ensembles.py",
        "module": "tests.integration.basic.test_ensembles",
        "function": "TestBasic.test_0_mean_ensemble",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection",
        "line": 8,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection",
        "line": 8,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.get_mixers",
        "line": 9,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.get_mixers",
        "line": 9,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_0_regression_task",
        "line": 16,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_0_regression_task",
        "line": 16,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_1_multiclass_task",
        "line": 23,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_1_multiclass_task",
        "line": 23,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_2_unit_text_task",
        "line": 30,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_2_unit_text_task",
        "line": 30,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_3_complex_text_task",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_3_complex_text_task",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_4_timeseries_t_plus_1",
        "line": 44,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_4_timeseries_t_plus_1",
        "line": 44,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_5_timeseries_t_plus_n",
        "line": 60,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_model_selection.py",
        "module": "tests.integration.basic.test_model_selection",
        "function": "TestMixerSelection.test_5_timeseries_t_plus_n",
        "line": 60,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.mixer'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unreachable",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 44,
        "character": 8
      },
      "message": "Unreachable code"
    },
    {
      "source": "pylint",
      "code": "unreachable",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 44,
        "character": 8
      },
      "message": "Unreachable code"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 45,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "use-a-generator",
      "location": {
        "path": "tests/integration/basic/test_qclassic.py",
        "module": "tests.integration.basic.test_qclassic",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 45,
        "character": 24
      },
      "message": "Use a generator instead 'all(0 <= p <= 1 for p in predictions['confidence'])'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.high_level'"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.types'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'mindsdb_datasources'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'mindsdb_datasources'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "save",
        "line": 9,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "save",
        "line": 9,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "train",
        "line": 13,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "train",
        "line": 13,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_first_bit",
        "line": 17,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_first_bit",
        "line": 17,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-argument",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_first_bit",
        "line": 17,
        "character": 28
      },
      "message": "Unused argument 'df'"
    },
    {
      "source": "pylint",
      "code": "unused-argument",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_first_bit",
        "line": 17,
        "character": 28
      },
      "message": "Unused argument 'df'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_second_bit",
        "line": 22,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_second_bit",
        "line": 22,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_third_bit",
        "line": 30,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "execute_third_bit",
        "line": 30,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "TestBasic",
        "line": 39,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "TestBasic",
        "line": 39,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 40,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/basic/test_save_and_load.py",
        "module": "tests.integration.basic.test_save_and_load",
        "function": "TestBasic.test_0_predict_file_flow",
        "line": 40,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/integration/helpers.py",
        "module": "tests.integration.helpers",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "unspecified-encoding",
      "location": {
        "path": "tests/integration/helpers.py",
        "module": "tests.integration.helpers",
        "function": null,
        "line": 11,
        "character": 9
      },
      "message": "Using open without explicitly specifying an encoding"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/integration/helpers.py",
        "module": "tests.integration.helpers",
        "function": "break_dataset",
        "line": 19,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/integration/helpers.py",
        "module": "tests.integration.helpers",
        "function": "ClickhouseTest",
        "line": 40,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data.timeseries_analyzer'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.data.timeseries_analyzer'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.general'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.general'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_mase",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_mase",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_get_residuals",
        "line": 34,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_get_residuals",
        "line": 34,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_get_residuals",
        "line": 37,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use list(range(data_len)) instead."
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_get_residuals",
        "line": 37,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use list(range(data_len)) instead."
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_evaluate_array_r2_accuracy",
        "line": 52,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/data/test_transform_ts.py",
        "module": "tests.unit_tests.data.test_transform_ts",
        "function": "TestTransformTS.test_evaluate_array_r2_accuracy",
        "line": 52,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.audio'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.audio'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": "TestMFCCEncoder",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": "TestMFCCEncoder",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": "TestMFCCEncoder.test_encode",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/audio/test_mfcc.py",
        "module": "tests.unit_tests.encoder.audio.test_mfcc",
        "function": "TestMFCCEncoder.test_encode",
        "line": 10,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.log'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": "TestAutoencoder",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": "TestAutoencoder",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": "TestAutoencoder.test_autoencoder",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": "TestAutoencoder.test_autoencoder",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": "TestAutoencoder.test_autoencoder",
        "line": 18,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_autoencoder.py",
        "module": "tests.unit_tests.encoder.categorical.test_autoencoder",
        "function": "TestAutoencoder.test_autoencoder",
        "line": 18,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.multihot'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": null,
        "line": 8,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.multihot'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.get_vocab",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.get_vocab",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.test_multi_encoding",
        "line": 15,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.test_multi_encoding",
        "line": 15,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.test_multi_encoding_empty_row",
        "line": 33,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.test_multi_encoding_empty_row",
        "line": 33,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.test_handle_unseen_none",
        "line": 49,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_multihot.py",
        "module": "tests.unit_tests.encoder.categorical.test_multihot",
        "function": "TestMultiHotEncoder.test_handle_unseen_none",
        "line": 49,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.onehot'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.categorical.onehot'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": "TestOnehot",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": "TestOnehot",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": "TestOnehot.test_encode_and_decode_with_unknown_token",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": "TestOnehot.test_encode_and_decode_with_unknown_token",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": "TestOnehot.test_encode_and_decode_with_return_zeros",
        "line": 49,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/categorical/test_onehot.py",
        "module": "tests.unit_tests.encoder.categorical.test_onehot",
        "function": "TestOnehot.test_encode_and_decode_with_return_zeros",
        "line": 49,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.identity.identity'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.identity.identity'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder.test_encode_and_decode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder.test_encode_and_decode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder.test_encode_and_decode",
        "line": 17,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder.test_encode_and_decode",
        "line": 17,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder.test_encode_and_decode",
        "line": 24,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/identity/test_identity.py",
        "module": "tests.unit_tests.encoder.identity.test_identity",
        "function": "TestIdentityEncoder.test_encode_and_decode",
        "line": 24,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.image'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.image'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": "TestImg2VecEncoder",
        "line": 8,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": "TestImg2VecEncoder",
        "line": 8,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": "TestImg2VecEncoder.test_encode",
        "line": 9,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/images/test_img_2_vec.py",
        "module": "tests.unit_tests.encoder.images.test_img_2_vec",
        "function": "TestImg2VecEncoder.test_encode",
        "line": 9,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder.test_encode_and_decode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder.test_encode_and_decode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder.test_positive_domain",
        "line": 32,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder.test_positive_domain",
        "line": 32,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder.test_log_overflow_and_none",
        "line": 43,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/numeric/test_numeric.py",
        "module": "tests.unit_tests.encoder.numeric.test_numeric",
        "function": "TestNumericEncoder.test_log_overflow_and_none",
        "line": 43,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.numeric'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": null,
        "line": 7,
        "character": 0
      },
      "message": "Unable to import 'lightwood.api.dtype'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": "TestPretrainedLangEncoder",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": "TestPretrainedLangEncoder",
        "line": 11,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": "TestPretrainedLangEncoder.test_encode_and_decode",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": "TestPretrainedLangEncoder.test_encode_and_decode",
        "line": 12,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": "TestPretrainedLangEncoder.test_encode_and_decode",
        "line": 50,
        "character": 12
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_pretrained.py",
        "module": "tests.unit_tests.encoder.text.test_pretrained",
        "function": "TestPretrainedLangEncoder.test_encode_and_decode",
        "line": 50,
        "character": 12
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": null,
        "line": 2,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": "TestRnnEncoder",
        "line": 6,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": "TestRnnEncoder",
        "line": 6,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": "TestRnnEncoder.test_encode_and_decode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_rnn.py",
        "module": "tests.unit_tests.encoder.text.test_rnn",
        "function": "TestRnnEncoder.test_encode_and_decode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.short'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.short'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.helpers.text'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "generate_sentences",
        "line": 72,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "generate_sentences",
        "line": 72,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder",
        "line": 77,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder",
        "line": 77,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_get_tokens",
        "line": 78,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_get_tokens",
        "line": 78,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_target_auto_mode",
        "line": 85,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_target_auto_mode",
        "line": 85,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_target_auto_mode",
        "line": 95,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_target_auto_mode",
        "line": 95,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_target_auto_mode",
        "line": 108,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_target_auto_mode",
        "line": 108,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_target_auto_mode",
        "line": 118,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_target_auto_mode",
        "line": 118,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_auto_mode",
        "line": 131,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_auto_mode",
        "line": 131,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_auto_mode",
        "line": 141,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_auto_mode",
        "line": 141,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_auto_mode",
        "line": 150,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_auto_mode",
        "line": 150,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_auto_mode",
        "line": 160,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_auto_mode",
        "line": 160,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_manual_mode",
        "line": 169,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_manual_mode",
        "line": 169,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_manual_mode",
        "line": 177,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_smallvocab_non_target_manual_mode",
        "line": 177,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_manual_mode",
        "line": 190,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_manual_mode",
        "line": 190,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_manual_mode",
        "line": 198,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_short.py",
        "module": "tests.unit_tests.encoder.text.test_short",
        "function": "TestShortTextEncoder.test_non_smallvocab_non_target_manual_mode",
        "line": 198,
        "character": 15
      },
      "message": "Access to a protected member _mode of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": "TestTfidfEncoder",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": "TestTfidfEncoder",
        "line": 7,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": "TestTfidfEncoder.test_encode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_tfidf.py",
        "module": "tests.unit_tests.encoder.text.test_tfidf",
        "function": "TestTfidfEncoder.test_encode",
        "line": 8,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.vocab'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": null,
        "line": 3,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.text.vocab'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": "TestVocabularyEncoder",
        "line": 6,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": "TestVocabularyEncoder",
        "line": 6,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": "TestVocabularyEncoder.test_encode_decode",
        "line": 7,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/text/test_vocab.py",
        "module": "tests.unit_tests.encoder.text.test_vocab",
        "function": "TestVocabularyEncoder.test_encode_decode",
        "line": 7,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": null,
        "line": 4,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series.helpers.common'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series.helpers.common'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder",
        "line": 9,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_minmax_normalizer",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_minmax_normalizer",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_cat_normalizer",
        "line": 22,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_cat_normalizer",
        "line": 22,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_overfit",
        "line": 38,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_overfit",
        "line": 38,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unnecessary-lambda",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_overfit.<lambda>",
        "line": 53,
        "character": 47
      },
      "message": "Lambda may not be necessary"
    },
    {
      "source": "pylint",
      "code": "unnecessary-lambda",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_overfit.<lambda>",
        "line": 53,
        "character": 47
      },
      "message": "Lambda may not be necessary"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_overfit",
        "line": 62,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
        "module": "tests.unit_tests.encoder.time_series.test_timeseries_rnn",
        "function": "TestRnnEncoder.test_overfit",
        "line": 62,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": null,
        "line": 5,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series.helpers.transformer_helpers'"
    },
    {
      "source": "pylint",
      "code": "import-error",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": null,
        "line": 6,
        "character": 0
      },
      "message": "Unable to import 'lightwood.encoder.time_series.helpers.transformer_helpers'"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-class-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder",
        "line": 10,
        "character": 0
      },
      "message": "Missing class docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_get_chunk",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_get_chunk",
        "line": 11,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_mask",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_mask",
        "line": 37,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 54,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 54,
        "character": 4
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 64,
        "character": 8
      },
      "message": "Access to a protected member _transformer_hidden_size of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 64,
        "character": 8
      },
      "message": "Access to a protected member _transformer_hidden_size of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 70,
        "character": 21
      },
      "message": "Access to a protected member _prepare_raw_data of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 70,
        "character": 21
      },
      "message": "Access to a protected member _prepare_raw_data of a client class"
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 71,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use list(data) instead."
    },
    {
      "source": "pylint",
      "code": "unnecessary-comprehension",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 71,
        "character": 0
      },
      "message": "Unnecessary use of a comprehension, use list(data) instead."
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 72,
        "character": 25
      },
      "message": "Access to a protected member _encoder of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 72,
        "character": 25
      },
      "message": "Access to a protected member _encoder of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 74,
        "character": 61
      },
      "message": "Access to a protected member _transformer_hidden_size of a client class"
    },
    {
      "source": "pylint",
      "code": "protected-access",
      "location": {
        "path": "tests/unit_tests/encoder/time_series/test_transformer.py",
        "module": "tests.unit_tests.encoder.time_series.test_transformer",
        "function": "TestTransformerEncoder.test_overfit",
        "line": 74,
        "character": 61
      },
      "message": "Access to a protected member _transformer_hidden_size of a client class"
    },
    {
      "source": "pylint",
      "code": "missing-module-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": null,
        "line": 1,
        "character": 0
      },
      "message": "Missing module docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_short_sentences",
        "line": 90,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_rich_sentences",
        "line": 94,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_timeseries",
        "line": 98,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "rand_ascii_str",
        "line": 118,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "rand_int",
        "line": 123,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "rand_float",
        "line": 127,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_value_cols",
        "line": 131,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-variable",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_value_cols",
        "line": 158,
        "character": 12
      },
      "message": "Unused variable 'n'"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_log_labels",
        "line": 170,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "unused-argument",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_log_labels",
        "line": 170,
        "character": 33
      },
      "message": "Unused argument 'separator'"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_log_labels",
        "line": 177,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_timeseries_labels",
        "line": 186,
        "character": 0
      },
      "message": "Missing function or method docstring"
    },
    {
      "source": "pylint",
      "code": "consider-using-enumerate",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "generate_timeseries_labels",
        "line": 193,
        "character": 8
      },
      "message": "Consider using enumerate instead of iterating with range and len"
    },
    {
      "source": "pylint",
      "code": "missing-function-docstring",
      "location": {
        "path": "tests/utils/data_generation.py",
        "module": "tests.utils.data_generation",
        "function": "columns_to_file",
        "line": 212,
        "character": 0
      },
      "message": "Missing function or method docstring"
    }
  ]
}
